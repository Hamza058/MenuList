@using EntityLayer.Concrete
@model List<Product>

@{
    Layout = null;
}

<!DOCTYPE html>

<html lang="tr">
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Menu</title>
    <link rel="icon" type="image/x-icon" href="~/logo.png" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <style>
        body {
            height: 100%;
            margin: 0;
            background-repeat: no-repeat;
            background-attachment: fixed;
            background-image: linear-gradient(to bottom, #DCDCDC, #1f2029);
        }

        .container-fluid {
            padding-top: 50px;
            display: grid;
            place-items: center;
        }

        .category {
            width: 90%;
            background-color: rgb(240, 240, 240);
            border-radius: 40px;
            min-height: 80px;
            margin-bottom: 20px;
            transition: height 2s;
        }

            .category .heading {
                display: block;
                position: relative;
                height: 80px;
                border-radius: 40px;
            }

            .category:hover {
                background-color: rgb(237, 109, 97);
                color: white;
                font-weight: 600;
            }

            .category h3 {
                position: absolute;
                text-transform: uppercase;
                font-family: cursive;
                left: 5%;
                top: 30%
            }

            .category img {
                position: absolute;
                right: 5%;
                top: 10%
            }

        .item {
            display: none;
            max-height: 0;
            overflow: hidden;
            background-color: rgb(240, 240, 240);
            color: black;
            width: 80%;
            border-radius: 0 0 25px 25px;
            height: auto;
            border: 1px solid;
            margin: 15px auto 15px auto;
            transition: max-height 2s;
        }

            .item img {
                position: static;
                width: 100%;
                height: 120px;
            }
    </style>
</head>
<body>
    <div class="col-lg-12 text-center p-3">
        <a asp-controller="User" asp-action="Login">
            <img class="rounded-circle" src="~/logo.png" width="45%" />
        </a>
    </div>
    <div id="categories" class="container-fluid">
        <div id="loading" class="text-center">
            <div class="spinner-border text-light" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js" integrity="sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+" crossorigin="anonymous"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script>
        function loadProducts() {
            $("#loading").show();
            $.ajax({
                type: "Get",
                url: "/Category/Get/",
                data: { name: "" },
                success: function (data) {
                    $.each(data, function (index, item) {
                        let category = `
                                        <div id="${item.categoryName}" class="category">
                                            <div class="heading" onclick="menuOpen('${item.categoryName}')">
                                                <h3>${item.categoryName}</h3>
                                                <img src="/Images/Category/${item.categoryImage}">
                                            </div>
                                        </div>
                        `;
                        $("#categories").append(category);
                        let $currentCategory = $(`#${item.categoryName}`);
                        $.each(item.products, function (index, productItem) {
                            let products = `
                                            <div class="item">
                                                <div class="col-12">
                                                    <img src="/Images/Product/${productItem.image}">
                                                </div>
                                                <div class="col-12">
                                                    <p class="text-center mt-1 mb-1">${productItem.productName}</p>
                                                    <p class="text-start p-2 mb-0">${productItem.description}</p>
                                                    <p class="float-end pe-4">${productItem.price} TL</p>
                                                </div>
                                            </div>
                            `;
                            $(`#${item.categoryName}`).append(products);
                        });
                    });
                    $("#loading").hide();
                },
                error: function (e) {
                    console.log(e);
                }
            })
        }
        loadProducts();

        function menuOpen(id) {
            var menuBar = document.querySelectorAll(`#${id} .item`);
            console.log(menuBar);
            menuBar.forEach(function (item) {
                if (item.style.maxHeight === "0px" || item.style.maxHeight === "") {
                    item.style.display = "block"
                    item.style.maxHeight = item.scrollHeight + "px";
                } else {
                    item.style.display = "none"
                    item.style.maxHeight = "0px";
                }
            });
        }

        window.onclick = function (event) {
            if (!event.target.matches('.category') && !event.target.closest('.category')) {
                var dropdowns = document.getElementsByClassName("item");
                for (var i = 0; i < dropdowns.length; i++) {
                    var openDropdown = dropdowns[i];
                    if (openDropdown.style.maxHeight !== "0px" && openDropdown.style.maxHeight !== "") {
                        openDropdown.style.maxHeight = "0px";
                        openDropdown.style.display = "none";
                    }
                }
            }
        };
    </script>
</body>
</html>